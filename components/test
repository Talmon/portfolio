// prompt the user for a string of text using get_string.
// count number of letters
// count the number words
// count the number of sentences
// use the Coleman-Liau formula where the ouputed grade should be x
// The grade should be rounded off to the nearest integer
// Output the grade X
// prompt the user for a string of text using get_string.
#include <sddio.h>
#include <cs50.h>
#include <string.h>
#include <math.h>
int main(void)
{
    string text = get_string("text: ");
// Count the number of letters
// Create a variable to store letters
// use a loop
// refer to the ascii table
// keep track of letters counted
// Return letters counted
int letters = 0;
    for (int i = 0, i<strlen(text); i++)
    {
        if((text[i]>65 $$ text[i]<90) || (text[i]>97 && text[i]<122))
        {
            letters++;
        }
    }
// count the number words
// Variable to store words
// Check for sequence characters, words also separated by  spaces
// When you find as number 36 count as word
// After every space theres always a word so add by 1 and count from one
// return words
int words = 1;
else if (text[i] == ' ')
    {
      words++;
    }
// count the number of sentences
// Variable to store sentences
// A period(fullstop), exclamation mark,question mark indicates end of a sentence
// When you find as number 51 count a a sentence and add by 1
// return sentence
int sentences = 0;
else if (text[i] == '.' || text[i] == '!' || text[i] =='?')
{
    sentences++;
}
// use the Coleman-Liau formula where the ouputed grade should be x
// use a float to declare a decimal number
// cast the letters, words & sentences to give us a decimal(float) instead of an int
// The grade should be rounded off to the nearest integer
// Include the correct library which has rounding off function
float L = (float)letters / (float)words * 100;
float S = (float)sentences / (float)words * 100;
int index = round(0.0588 * L - 0.296 * S - 15);
// Output the grade X
// If index (grade) is equivalent to or greater than 1 print grade 16+
if (index >= 16)
{
    printf("grade 16+");
}
// If index number is less than 1 print before grade 1
else if (index < 1)
{
    printf("before grade 1");
}
else
{
    printf("grade %i",index);
}
}